서버(Server)
정보를 제공(Response)하는 컴퓨터 또는 소프트웨어를 말합니다.

클라이언트(Client)
정보를 요청(Request)하는 컴퓨터 또는 소프트웨어를 말합니다.
			
		   요청(Request)		
클라이언트(브라우저) -----------------> 서버(컴퓨터, 웹서버 프로그램)
		 <----------------- 
	   	   응답(response)

1. 요청(Request)
- 클라이언트에서 서버쪽으로 HTML 문서를 요청하는 것을 의미합니다.
- 접근하고자 하는 페이지(URL)을 브라우저를 통해 알려줍니다.
- GET 또는 POST등 방식으로 요청합니다.

2. 응답(response)
- 서버에서 결과를 HTML문서를 통해 클라이언트쪽으로 보여주는 것을 의미합니다.
- 상태코드(성공여부)와 컨텐츠 타입(텍스트, 이미지, HTML, XML, JSON ..등),
컨텐츠(HTML 코드, 이미지, 문자열 ..등)을 전달합니다.


프로토콜(Protocol)
컴퓨터등 간의 정보 교환에서 통신을 위해 미리 정해놓은 규약을 말합니다.
(http, https, ftp, smtp, pop3, tcp/ip ...등)

HTTP(HyperText Transfer)
1. TCP/IP 기반의 웹용 프로토콜입니다.
2. Header와 Body로 구성되어 있습니다.
3. 웹 서버에서 서버-클라이언트 사이에 요청/응답이 가능하도록 만들어진 규약입니다.

URL(Uniform Resource Locator)
네트워크 상에서 자원이 어디에 있는지 알려주기 위한 규약입니다.

http://www.ryuzy.com:8080/blog/index.jsp
--------------------------------------------- URL
----   ----------------  ----- ----- ---------
프로토콜	   도메인    포트  폴더,  파일(자원위치)

//! ip: 컴퓨터주소를 찾기위한것, port: 프로그램을 찾기위한것
//! 80번 포트: 웹서버프로그램, 기본포트

URI(Uniform REsourxe Identifier)
URL은 자원의 위치만 나타내는 반면 URI는 자원의 위치에 전달될 인자까지 포함하는 규약입니다.

http://www.ryuzy.com:8080/blog/index.jsp?userid=apple&gender=female
				  ---------------------------------
				         데이터를 전달하는 인자

TCP 포트 
서버 하드웨어 상에서 돌아가는 소프트웨어를 구분하기 위한 숫자 값을 의미합니다.

사용범위 : 0~65535(0 ~ 1023까지는 운영체제 또는 별도로 서비스를 사용하기 위해 예약)

웹 서버(Web Server)
1. 클라이언트로부터 요청을 받아 요청한 내용을 응답해주는 프로그램입니다.
2. 웹서버는 정적인 페이지(HTML, CSS, 이미지, JavaScript)만 전달합니다.
3. 동적인 컨텐츠 생성이 불가능합니다.
4. 대표적인 웹서버 프로그램은 Apache, zeus, NGINX, IIS, Mongoose ..등 있습니다.

웹 어플리케이션 서버(Web Application Server)
1. 동적인 부분을 담당합니다.
2. 프로그램 실행 환경과 데이터베이스 접속 기능을 제공합니다.
3. 여러개의 트랜젝션을 관리합니다.
4. 업무를 처리하는 비즈니스 로직을 수행합니다.
5. 대표적인 WAS(Web Application Server)는 Tomcat이 있습니다.

Tomcat 다운로드
http://tomcat.apache.org/

서버 실행(사이트 확인방법)
http://locallhost:8080 (가상 ip 주소)
http://127.0.0.1:8080 (가상 ip 주소)
http://192.168.123.6	(본인 ip 주소)

Tomcat 환경 설정
//! C:\Program Files\Apache Software Foundation\Tomcat 9.0\conf
server.xml / web.xml

이클립스 다운로드
https://www.eclipse.org/downloads/

JSP(Java Server Pages)
HTML 코드에 JAVA 코드를 넣어 동적 웹페이지를 생성하는 웹 어플리케이션 도구입니다.
JSP가 실행되면 자바 서블릿(Servlet)으로 변환되며 웹 어플리케이션 서버에서 동작하며
필요한 기능을 수행하고 생성된 데이터를 웹페이지와 함께 클라이언트로 전달합니다.

		           xxx.jsp
클라이언트 	------------------------>	[서블릿 컨테이너]
					jsp -> Servlet 파일로 변환
					Servlet -> class 파일로 컴파일
					class -> html 형태
		<------------------------ 응답

JSP 장점
1. JAVA 코드에 HTML 코드가 삽입되는 문제를 해결합니다.
2. 퍼블리셔와 협업이 가능합니다.
3. 간단한 페이지를 구현할 때는 JSP문서로 제작하는 것이 많은 시간을 절약합니다.

JSP 단점
1. 복잡한 로직을 구현할 때 HTML 중심의 코드가 이해하기 어렵게 만들 수 있습니다.
2. 프로그래밍 언어를 모르는 사람이 실수로 코드를 망칠 수 있습니다.
3. core 적인 부분의 로직의 유출을 막기 위해 JAVA단에서 로직으로 작성하는 방법이 보안상 유리합니다.
//! JSP는 프로트단만 담당함. 진짜 돌아가는 비지니스 적인 시스템은 Servlet으로 제작함
//! 진짜 웹서버는 JSP와 Servlet 을 연동하며 제작함


스크립트 태그
HTML 문서와 자바 코드를 넣어 프로그램을 수행하는 기능을 구현할 수 있습니다.

- 선언문 : <%!  ~~~~~~ %>
자바 변수나 메소드를 정의하는데 사용하는 태그입니다.

- 스크립틀릿 : <%!  ~~~~ %>
자바 변수 선언 및 자바 로직 코드를 작성하는데 사용하는 태그입니다.
<%
	String name = "김사과";
	int age = 20;
	double height = 160.5;
%>

- 표현문 : <%= ~~~ %>
변수, 계산식, 메소드 호출 결과를 나타내주는 태그입니다. 타입은 문자열입니다.
(out.print()와 동일)
	<p> 이름 : <%=name%></p>

디렉티브 태그 
현재 JSP 페이지에 대한 정보를 설정하는 태그입니다. 페이지 최상단에 선언합니다.
<%@ page ~~~ %>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

import : 클래스를 사용합니다.
language : 사용할 프로그래밍 언어를 설정합니다.
contenttype : 생성할 문서의 컨텐츠 유형입니다.
pageEncording : 페이지 문자 인코딩을 설정합니다.


과제 및 실습
투어인리스트 메인 배경화면 PC버전, 모바일버전 자동으로 넘어가게 변경하기